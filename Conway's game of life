#include <raylib.h>

#define SCREEN_WIDTH 800
#define SCREEN_HEIGHT 600
#define CELL_SIZE 10
#define GRID_WIDTH (SCREEN_WIDTH / CELL_SIZE)
#define GRID_HEIGHT (SCREEN_HEIGHT / CELL_SIZE)

void updateGrid(int grid[GRID_WIDTH][GRID_HEIGHT]);
void drawGrid(int grid[GRID_WIDTH][GRID_HEIGHT]);

int main(void) {
    InitWindow(SCREEN_WIDTH, SCREEN_HEIGHT, "Conway's Game of Life");
    
    int grid[GRID_WIDTH][GRID_HEIGHT] = {0};
    
    for (int x = 0; x < GRID_WIDTH; x++) {
        for (int y = 0; y < GRID_HEIGHT; y++) {
            grid[x][y] = GetRandomValue(0, 1);
        }
    }

    SetTargetFPS(10);

    while (!WindowShouldClose()) {
        updateGrid(grid);

        BeginDrawing();
        ClearBackground(BLACK);
        drawGrid(grid);
        EndDrawing();
    }

    CloseWindow();

    return 0;
}

void updateGrid(int grid[GRID_WIDTH][GRID_HEIGHT]) {
    int newGrid[GRID_WIDTH][GRID_HEIGHT];
    
    for (int x = 0; x < GRID_WIDTH; x++) {
        for (int y = 0; y < GRID_HEIGHT; y++) {
            int neighbors = 0;

            for (int dx = -1; dx <= 1; dx++) {
                for (int dy = -1; dy <= 1; dy++) {
                    if (dx == 0 && dy == 0) continue;
                    
                    int nx = (x + dx + GRID_WIDTH) % GRID_WIDTH;
                    int ny = (y + dy + GRID_HEIGHT) % GRID_HEIGHT;
                    
                    neighbors += grid[nx][ny];
                }
            }

            if (grid[x][y] == 1) {
                if (neighbors < 2 || neighbors > 3) {
                    newGrid[x][y] = 0;
                } else {
                    newGrid[x][y] = 1;
                }
            } else {
                if (neighbors == 3) {
                    newGrid[x][y] = 1;
                } else {
                    newGrid[x][y] = 0;
                }
            }
        }
    }

    for (int x = 0; x < GRID_WIDTH; x++) {
        for (int y = 0; y < GRID_HEIGHT; y++) {
            grid[x][y] = newGrid[x][y];
        }
    }
}

void drawGrid(int grid[GRID_WIDTH][GRID_HEIGHT]) {
    for (int x = 0; x < GRID_WIDTH; x++) {
        for (int y = 0; y < GRID_HEIGHT; y++) {
            if (grid[x][y] == 1) {
                DrawRectangle(x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE, WHITE);
            }
        }
    }
}
